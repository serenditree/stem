---
apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: serenditree-builder
  labels:
    app.kubernetes.io/component: tekton
spec:
  params:
    - name: config
      type: string
      description: Name of the configuration to use.
    - name: image
      type: string
      description: Reference of the image buildah will produce.
    - name: builder-image
      type: string
      default: quay.io/serenditree/buildah:latest
      description: The location of the buildah builder image.
  results:
    - name: sha
      description: Image digest of the created container image.
  workspaces:
    - name: buildah
  stepTemplate:
    envFrom:
      - configMapRef:
          name: $(params.config)
    env:
      - name: _ST_REPO
        value: $(workspaces.buildah.path)/.repo
      - name: _ST_CACHE
        value: $(workspaces.buildah.path)/.cache
  steps:
    - name: env
      image: $(params.builder-image)
      workingDir: $(workspaces.buildah.path)
      script: |
        env | grep _ST_ | sed -E 's/(.*(CREDENTIALS|PASSWORD)[^=]+=).*/\1***/' | sort
        mkdir -pv $_ST_REPO $_ST_CACHE
#   - name: build
#     image: $(params.builder-image)
#     workingDir: $(workspaces.buildah.path)
#     command:
#       - sc/cli.sh
#     args:
#       - build
#       - $(params.image)
#     volumeMounts:
#       - name: containers
#         mountPath: /var/lib/containers
#     securityContext:
#       privileged: true
#   - name: push
#     image: $(params.builder-image)
#     workingDir: $(workspaces.buildah.path)
#     command:
#       - sc/cli.sh
#     args:
#       - push
#       - $(params.image)
#     volumeMounts:
#       - name: containers
#         mountPath: /var/lib/containers
#     securityContext:
#       privileged: true
    - name: digest
      image: $(params.builder-image)
      workingDir: $(workspaces.buildah.path)
      script: |
        echo debug | head -n1 | tee $(results.sha.path)
      volumeMounts:
        - name: containers
          mountPath: /var/lib/containers
      securityContext:
        privileged: true
  volumes:
    - name: containers
      persistentVolumeClaim:
        claimName: tekton-containers
