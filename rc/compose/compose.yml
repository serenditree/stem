version: '3.8'
services:

  leaf:
    image: localhost/serenditree/leaf:compose
    hostname: leaf
    restart: unless-stopped
    ports:
      - "8080:8080"
    healthcheck:
      test: curl localhost:8080

  branch-user:
    image: localhost/serenditree/branch-user:latest
    hostname: branch-user
    restart: unless-stopped
    ports:
      - "8081:8080"
    env_file:
      - ../../plots/branch/plot.env
    environment:
      - SERENDITREE_STAGE=compose
      - SERENDITREE_LOG_LEVEL=DEBUG
      - quarkus.log.handler.gelf.enabled=true
      - quarkus.log.handler.gelf.host=root-breeze
      - quarkus.log.handler.gelf.port=24224
    healthcheck:
      test: curl localhost:8080/q/health/ready
    depends_on:
      - root-user
      - root-wind

  branch-seed:
    image: localhost/serenditree/branch-seed:latest
    hostname: branch-seed
    restart: unless-stopped
    ports:
      - "8082:8080"
    env_file:
      - ../../plots/branch/plot.env
    environment:
      - SERENDITREE_STAGE=compose
      - SERENDITREE_LOG_LEVEL=DEBUG
      - quarkus.log.handler.gelf.enabled=true
      - quarkus.log.handler.gelf.host=root-breeze
      - quarkus.log.handler.gelf.port=24224
    healthcheck:
      test: curl localhost:8080/q/health/ready
    depends_on:
      - root-seed
      - root-wind

  branch-poll:
    image: localhost/serenditree/branch-poll:latest
    hostname: branch-poll
    restart: unless-stopped
    ports:
      - "8083:8080"
    env_file:
      - ../../plots/branch/plot.env
    environment:
      - SERENDITREE_STAGE=compose
      - SERENDITREE_LOG_LEVEL=DEBUG
      - quarkus.log.handler.gelf.enabled=true
      - quarkus.log.handler.gelf.host=root-breeze
      - quarkus.log.handler.gelf.port=24224
    healthcheck:
      test: curl localhost:8080/q/health/ready
    depends_on:
      - root-user
      - root-wind

  root-map:
    image: localhost/serenditree/root-map:latest
    hostname: root-map
    restart: unless-stopped
    ports:
      - "8084:8080"
    volumes:
      - ${_ST_HOME_STEM}/plots/root/map/data/database:/serenditree/data:z
    healthcheck:
      test: curl localhost:8080/index.json

  root-user:
    image: localhost/serenditree/root-user:latest
    hostname: root-user
    restart: unless-stopped
    ports:
      - "8085:3306"
    env_file:
      - ../../plots/root/user/plot.env
    volumes:
      - root-user:/bitnami/mariadb
    healthcheck:
      test: mysqladmin status -uroot -proot

  root-seed:
    image: localhost/serenditree/root-seed:latest
    hostname: root-seed
    restart: unless-stopped
    ports:
      - "8086:27017"
    env_file:
      - ../../plots/root/seed/plot.env
    volumes:
      - root-seed:/bitnami/mongodb
    healthcheck:
      test: mongo --disableImplicitSessions --eval 'db.hello().isWritablePrimary' | grep -q true
    ulimits:
      nproc: 64000
      nofile: 64000

  root-wind:
    image: localhost/serenditree/root-wind:latest
    hostname: root-wind
    restart: unless-stopped
    ports:
      - "9092:9092"
    environment:
      - KAFKA_HOST=root-wind
    healthcheck:
      test: bash health.sh

  root-search:
    container_name: root-search
    image: docker.io/opensearchproject/opensearch:2
    pull_policy: missing
    restart: always
    environment:
      - cluster.name=root-search
      - node.name=root-search
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - 'OPENSEARCH_JAVA_OPTS=-Xms2048m -Xmx2048m'
      - 'DISABLE_INSTALL_DEMO_CONFIG=true'
      - 'DISABLE_SECURITY_PLUGIN=true'
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - root-search:/usr/share/opensearch/data
    ports:
      - '127.0.0.1:9200:9200'
      - '127.0.0.1:9600:9600'

  root-dashboard:
    container_name: root-dashboard
    depends_on:
      - root-search
    image: docker.io/opensearchproject/opensearch-dashboards:2
    pull_policy: missing
    restart: always
    environment:
      - 'OPENSEARCH_HOSTS=["http://root-search:9200"]'
      - 'DISABLE_SECURITY_DASHBOARDS_PLUGIN=true'
    ports:
      - '127.0.0.1:5601:5601'

#  root-breeze:
#    image: localhost/serenditree/root-breeze:latest
#    hostname: root-breeze
#    restart: unless-stopped
#    ports:
#      - "24224:24224/udp"
#    depends_on:
#      - root-search

#  kafdrop:
#    image: docker.io/obsidiandynamics/kafdrop:latest
#    restart: unless-stopped
#    hostname: kafdrop
#    ports:
#      - "9000:9000"
#    environment:
#      KAFKA_BROKERCONNECT: root-wind:9092
#    depends_on:
#      - root-wind

volumes:
  root-user:
  root-seed:
  root-wind:
  root-search:
